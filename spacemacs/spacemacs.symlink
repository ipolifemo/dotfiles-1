;; -*- mode: emacs-lisp -*-
(defun dotspacemacs/layers ()
  (setq-default
   dotspacemacs-distribution 'spacemacs
   dotspacemacs-configuration-layer-path '()
   dotspacemacs-configuration-layers
   '(
     javascript
     react
     typescript
     (auto-completion :variables
                      auto-completion-enable-snippets-in-popup t
                      auto-completion-return-key-behavior nil
                      auto-completion-tab-key-behavior 'complete)

     better-defaults
     emacs-lisp
     git
     markdown
     org
     purescript
     (haskell :variables haskell-enable-hindent-style "johan-tibell")
     (shell :variables
             shell-default-height 30
             shell-default-position 'bottom
             shell-default-term-shell "/usr/local/bin/zsh")
     syntax-checking
     version-control
     html
     )
   dotspacemacs-additional-packages '(prettier-js)
   dotspacemacs-excluded-packages '()
   dotspacemacs-line-numbers t
   dotspacemacs-delete-orphan-packages t))

(defun dotspacemacs/init ()
  (setq-default
   dotspacemacs-editing-style 'vim
   dotspacemacs-verbose-loading nil
   dotspacemacs-startup-banner 'official
   dotspacemacs-startup-lists '(recents projects)
   dotspacemacs-themes '(deeper-blue
                         monokai
                         material
                         material-light
                         spacemacs-dark
                         spacemacs-light
                         solarized-light
                         solarized-dark
                         leuven)
   dotspacemacs-colorize-cursor-according-to-state t
   dotspacemacs-default-font '("Fantasque Mono"
                               :size 18
                               :weight normal
                               :width normal
                               :powerline-scale 1.1)
   dotspacemacs-leader-key "SPC"
   dotspacemacs-emacs-leader-key "M-m"
   dotspacemacs-major-mode-leader-key ","
   dotspacemacs-major-mode-emacs-leader-key "C-M-m"
   dotspacemacs-command-key ":"
   dotspacemacs-remap-Y-to-y$ t
   dotspacemacs-auto-save-file-location 'cache
   dotspacemacs-use-ido nil
   dotspacemacs-helm-resize nil
   dotspacemacs-helm-no-header nil
   dotspacemacs-helm-position 'bottom
   dotspacemacs-enable-paste-micro-state nil
   dotspacemacs-which-key-delay 0.4
   dotspacemacs-which-key-position 'bottom
   dotspacemacs-loading-progress-bar nil
   dotspacemacs-fullscreen-at-startup nil
   dotspacemacs-fullscreen-use-non-native nil
   dotspacemacs-maximized-at-startup t
   dotspacemacs-active-transparency 90
   dotspacemacs-inactive-transparency 90
   dotspacemacs-smooth-scrolling nil
   dotspacemacs-smartparens-strict-mode nil
   dotspacemacs-highlight-delimiters 'all
   dotspacemacs-persistent-server nil
   dotspacemacs-search-tools '("ag" "pt" "ack" "grep")
   dotspacemacs-default-package-repository nil
   ))

(defun dotspacemacs/user-init ()
  (push '("melpa-stable" . "stable.melpa.org/packages/") configuration-layer--elpa-archives)
  (push '(helm . "melpa-stable") package-pinned-packages))

(defun dotspacemacs/user-config ()
  (setq-default dotspacemacs-default-font '("Fantasque Sans Mono"
                                            :size 24
                                            :weight normal
                                            :width normal
                                            :powerline-scale 1.1))
  ;; ;; load some local config
  (load "~/.user-config.el")

  ;; no more hl line
  (global-hl-line-mode -1)

  ;; guess im using this or something dunno
  (setq org-agenda-files
        '("~/Code/notes/notes.org"
          "~/Code/notes/work.org"
          ))

  ;; yolo
  (global-company-mode)

  ;; what kind fo weirdo uses the normal one
  (global-set-key (kbd "C-SPC") 'company-complete)

  ;; why doesn't this work by default?
  (global-set-key (kbd "C-i") 'evil-jump-forward)


  ;; jesus christ delay popups are annoying
  (setq company-idle-delay 'nil)

  ;; i wish this were two separate commands
  (setq-default git-magit-status-fullscreen t)

  ;; jumalauta who thought this is helpful
  (fset 'evil-visual-update-x-selection 'ignore)

  ;; ;; set the actual freakin font size
  ;; (set-face-attribute 'default nil :height 150)

  ;; no powerline freaking separator
  (setq powerline-default-separator 'nil)

  ;; make ; do :
  (define-key evil-normal-state-map (kbd ";") 'evil-ex)

  ;; make Q do @q
  (define-key evil-normal-state-map (kbd "Q") 'evil-execute-macro)

  ;; escape key sequence
  (setq-default evil-escape-key-sequence "kj")

  ;; wtf who doesn't use 2-space JS indent
  (setq-default
   ;; js2-mode
   js2-basic-offset 2
   ;; web-mode
   css-indent-offset 2
   web-mode-markup-indent-offset 2
   web-mode-css-indent-offset 2
   web-mode-code-indent-offset 2
   web-mode-attr-indent-offset 2)
  (setq-default js-indent-level 2)
  (setq typescript-indent-level 2)
  (setq typescript-expr-indent-offset 2)

  (setq c-default-style "java")
  (setq-default c-basic-offset 2)

  ;; god damn it tide
  (setq tide-format-options
        '(:insertSpaceAfterFunctionKeywordForAnonymousFunctions
          t
          :placeOpenBraceOnNewLineForFunctions nil
          :indentSize 2
          :tabSize 2))

  ;; turn on fuckin typescript mode
  (add-to-list 'auto-mode-alist '("\\.tsx?\\'" . typescript-mode))
  ;; use prettier
  (add-hook 'typescript-mode-hook 'prettier-js-mode)

  ;; holy fucking hell package rot
  (setq ghc-report-errors nil)

  ;; handlebars is web mode?
  (add-to-list 'auto-mode-alist '("\\.foo\\'" . foo-mode))

  ;; web mode for shit
  (add-to-list 'auto-mode-alist '("\\.hbs?\\'" . web-mode))
)
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(evil-want-Y-yank-to-eol t)
 '(package-selected-packages
   (quote
    (soft-stone-theme prettier-js helm helm-core define-word xterm-color ws-butler winum which-key web-mode web-beautify volatile-highlights vi-tilde-fringe uuidgen use-package unfill toc-org tide tagedit spaceline smeargle slim-mode shell-pop scss-mode sass-mode reveal-in-osx-finder restart-emacs rainbow-delimiters pug-mode psci psc-ide popwin persp-mode pcre2el pbcopy paradox osx-trash osx-dictionary orgit org-projectile org-present org-pomodoro org-download org-bullets open-junk-file neotree mwim multi-term move-text monokai-theme mmm-mode markdown-toc magit-gitflow macrostep lorem-ipsum livid-mode linum-relative link-hint less-css-mode launchctl json-mode js2-refactor js-doc intero info+ indent-guide hungry-delete htmlize hlint-refactor hl-todo hindent highlight-parentheses highlight-numbers highlight-indentation hide-comnt help-fns+ helm-themes helm-swoop helm-projectile helm-mode-manager helm-make helm-hoogle helm-gitignore helm-flx helm-descbinds helm-css-scss helm-company helm-c-yasnippet helm-ag haskell-snippets google-translate golden-ratio gnuplot gitconfig-mode gitattributes-mode git-timemachine git-messenger git-link git-gutter-fringe git-gutter-fringe+ gh-md fuzzy flycheck-pos-tip flycheck-haskell flx-ido fill-column-indicator fancy-battery eyebrowse expand-region exec-path-from-shell evil-visualstar evil-visual-mark-mode evil-unimpaired evil-tutor evil-surround evil-search-highlight-persist evil-numbers evil-nerd-commenter evil-mc evil-matchit evil-magit evil-lisp-state evil-indent-plus evil-iedit-state evil-exchange evil-escape evil-ediff evil-args evil-anzu eval-sexp-fu eshell-z eshell-prompt-extras esh-help emmet-mode elisp-slime-nav dumb-jump diff-hl company-web company-tern company-statistics company-ghci company-ghc company-cabal column-enforce-mode coffee-mode cmm-mode clean-aindent-mode auto-yasnippet auto-highlight-symbol auto-compile aggressive-indent adaptive-wrap ace-window ace-link ace-jump-helm-line ac-ispell)))
 '(psc-ide-add-import-on-completion t t)
 '(psc-ide-rebuild-on-save nil t))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
